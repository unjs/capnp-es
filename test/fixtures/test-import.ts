// This file has been automatically generated by capnp-es.
import * as $ from "capnp-es";
import { TestAllTypes, TestAnyOthers, TestAnyPointer, TestAnyPointerConstants, TestConstants, TestContainMembrane, TestContructorName, TestDefaults, TestEmptyStruct, TestEnum, TestFieldZeroIsBit, TestGenerics, TestGenericsUnion, TestGenericsWrapper, TestGenericsWrapper2, TestGenerics_Inner, TestGenerics_Inner2, TestGenerics_Inner2_DeepNest, TestGenerics_UseAliases, TestGroups, TestInterleavedGroups, TestJoinResult, TestLateUnion, TestListDefaults, TestLists, TestLists_Struct0, TestLists_Struct0c, TestLists_Struct1, TestLists_Struct16, TestLists_Struct16c, TestLists_Struct1c, TestLists_Struct32, TestLists_Struct32c, TestLists_Struct64, TestLists_Struct64c, TestLists_Struct8, TestLists_Struct8c, TestLists_StructP, TestLists_StructPc, TestMembrane_Result, TestNameAnnotation, TestNameAnnotation_BadlyNamedEnum, TestNameAnnotation_NestedStruct, TestNameAnnotation_NestedStruct_DeeplyNestedEnum, TestNestedTypes, TestNestedTypes_NestedEnum, TestNestedTypes_NestedStruct, TestNestedTypes_NestedStruct_NestedEnum, TestNewUnionVersion, TestNewVersion, TestOldUnionVersion, TestOldVersion, TestOutOfOrder, TestPipeline_AnyBox, TestPipeline_Box, TestPrintInlineStructs, TestPrintInlineStructs_InlineStruct, TestProvisionId, TestRecipientId, TestStructUnion, TestStructUnion_SomeStruct, TestSturdyRef, TestSturdyRefHostId, TestSturdyRefObjectId, TestSturdyRefObjectId_Tag, TestTailCallee_TailResult, TestThirdPartyCapId, TestTransferCap, TestTransferCap_Element, TestUnion, TestUnionDefaults, TestUnionInUnion, TestUnnamedUnion, TestUseGenerics, TestUsing, TestWholeFloatDefault } from "./test.js";
export const _capnpFileId = BigInt("0xf36d7b330303c66e");
export class TestImport extends $.Struct {
  static readonly _capnp = {
    displayName: "TestImport",
    id: "bc55b08b672b5d97",
    size: new $.ObjectSize(8, 1),
  };
  _adoptField(value: $.Orphan<TestAllTypes>): void {
    $.utils.adopt(value, $.utils.getPointer(0, this));
  }
  _disownField(): $.Orphan<TestAllTypes> {
    return $.utils.disown(this.field);
  }
  get field(): TestAllTypes {
    return $.utils.getStruct(0, TestAllTypes, this);
  }
  _hasField(): boolean {
    return !$.utils.isNull($.utils.getPointer(0, this));
  }
  _initField(): TestAllTypes {
    return $.utils.initStructAt(0, TestAllTypes, this);
  }
  set field(value: TestAllTypes) {
    $.utils.copyFrom(value, $.utils.getPointer(0, this));
  }
  get enumField(): TestEnum {
    return $.utils.getUint16(0, this) as TestEnum;
  }
  set enumField(value: TestEnum) {
    $.utils.setUint16(0, value, this);
  }
  toString(): string { return "TestImport_" + super.toString(); }
}
